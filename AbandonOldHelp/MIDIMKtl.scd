// MIDIMKtl - an MKtl class for MIDI.

// One can find potential MIDI sources like this: 
	MIDIMKtl.find;

// It'll post a line such as this
MIDIMKtl('lnch0', 593081660);  // Launchpad
MIDIMKtl('nnkn0', -616253900);  // nanoKONTROL

// If you already know the (autogenerated) short name of your device, MIDIMKtl.find is optional to call.

// Instantiate your device with the autogenerated identifier
a = MIDIMKtl('lnch0');
b = MIDIMKtl('nnkn0');

// ... or give it another identifier by calling it with its uid 
// (to be found in MIDIMKtl.find)
// (you can also swap default names with this --for now only once, though-- )
a = MIDIMKtl('launch', 593081660);
	
// there is no uid like that, so this fails
c = MIDIMKtl(\launch, 12345);

// calling the method again with the same key will return the assigned one
MIDIMKtl(\launch);

b === a
// -> true

// just any device you have connected:
MIDIMKtl.find;
a = MIDIMKtl(MIDIMKtl.deviceDict.keys.asArray.first)


// the source
MIDIMKtl('lnch0').source;
MIDIMKtl('lnch0').srcID;

a = b;

// it loads descriptions of all its elements from files: 
a.deviceDescription;
// which can be posted conveniently
a.postDeviceDescription; "";
a.elementNames.postcs; "";

// turn on verbose mode:
// this adds a "verbose" function to the functionChain of all elements.
a.verbose = true;
b.verbose = true;

// turn it off again
a.verbose = false

a.elements
a.prepareFuncDict

// add a custom function

( // add method to NANOkontrol's leftmost slider
	a.addFunc(\sl1_1, \yubel, { |who, what, howmuch| 
		"YAYAYAY: ".post; [who, what, howmuch].postln;
	});
)
a.removeFunc(\sl1_1, \yubel)

( // add method to a Launchpad's upper left button 
	a.addFunc(\up, \yubel, { |who, what, howmuch| 
		"YAYAYAY: ".post; [who, what, howmuch].postln;
	});
)
a.removeFunc(\up, \yubel)



// tests for lookup key conversions: 

MIDIMKtl.makeCCKey(1, 20).postcs; // 'c_1_20'
MIDIMKtl.ccKeyToChanCtl('c_1_20').postcs; // [1, 20]
MIDIMKtl.makeNoteKey(1, 64).postcs; // 'c_1_20'
MIDIMKtl.noteKeyToChanNote('n_1_64').postcs; // [1, 20]

{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 [1, 2, 3].hash === [1, 2, 3].hash\
\
\
\\symbol234.hash;\
\
bench \{ 1000000.do \{ \
"aksdbsdhvbfdhvbldfhbvlifuhval,jhdvblzjhvlxichbc jhbglaiefuvb,chbvz,r7egraliufvfijbnvbjnfo".hash ===\
"aksdbsdhvbfdhvbldfhbvlifuhval,jhdvblzjhvlxichbc jhbglaiefuvb,chbvz,r7egraliufvfijbnvbjnfo".hash\
\} \}\
\
bench \{ 1000000.do \{ \
	\\symbol12345678.hash === \\symbol12345678.hash \
\} \}\
\
bench \{ 1000000.do \{ \
	[1, 2].hash === [1, 2].hash\
\} \}\
\
bench \{ 1000000.do \{ \
	[1, 2, 3, 4, 5].hash === [1, 2, 3, 4, 5].hash\
\} \}\
\
	// 6x faster than hash or symbol\
bench \{ 1000000.do \{ \
		(12 * 10000 + 123)\
\} \}\
\
	// lsft shift is slower than multiply\
bench \{ 1000000.do \{ \
		(12 << 128 + 123)\
\} \}\
\
3 << 2}